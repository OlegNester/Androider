<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string-array name="oop">
        <item>\t\t\tОбъектно-ориентированного программирования в Java (ООП - инкапсуляции, наследованию, полиморфизму и абстракции) - парадигма программирования, в которой основными концепциями являются понятия объектов и классов.
\nКласс - это составной тип данных, в котором кроме данных, та же описано то, как с етими данными работать.
\nОбъект- это экземпляр конкретного класса
\n\t\t\tИнкапсуляция — принцип, согласно которому атрибуты объекта заключаются в этот объект. Это задает для атрибутов контекст. Это также позволяет программисту ограничить доступ к атрибутам, чтобы они изменялись и использовались только через методы, которые программист собирается применять. Другими словами инкапсуляция – это механизм контроля доступа.
\n\t\t\tСуществует 4 вида модификаторов доступа: public, protected, private и default:
\n\t\t\tPublic – уровень предполагает  доступ к компоненту с этим модификатором из экземпляра любого класса и любого пакета.
\n\t\t\tProtected – уровень  предполагает  доступ к компоненту с этим модификатором из экземпляров родного класса и классов-потомков, независимо от того, в каком пакете они находятся.
\n\t\t\tDefault – уровень предполагает  доступ к компоненту с этим модификатором из экземпляров любых классов, находящихся в одном пакете с этим классом.
\n\t\t\tPrivate – уровень предполагает  доступ к компоненту с этим модификатором только из этого класса.
</item>

    </string-array>

</resources>
