<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string-array name="android">
        <item>\t\t\tRecyclerView – это компонент пользовательского интерфейса, который позволяет нам создавать прокручиваемый список. Он был представлен в Android Lollipop.
Компонент RecyclerView является усовершенствованным вариантом ListView, но не является его родственником и относится к семейству ViewGroup. Он часто используется как замена ListView.
Вначале это был сырой продукт, потом его доработали. На данном этапе можно считать, что он стал полноценной заменой устаревшего ListView.</item>

        <item>\t\t\tLayoutManager для RecycleView для чего?
Его основная работа заключается в управлении макетом для большого набора данных, предоставляемого адаптером. Он помещает каждый вид элемента в соответствующее положение в RecycleView. Кроме того, он повторно использует представления, которые больше не видны пользователю. Во время этого он может попросить адаптер заменить содержимое этого представления другим элементом из набора данных. Повторная обработка (или повторное использование) представлений в этом случае значительно повышает производительность, так как нет необходимости создавать дополнительные представления и выполнять дорогостоящие операции, такие как findViewById().</item>

        <item>\t\tRecyclerView.ViewHolder-это вспомогательный класс, который содержит представление строки или строк. Для каждого viewType создается один или несколько ViewHolder.
	Предположим, что вы хотите показать список из 1000 элементов, и есть только 10 элементов, видимых пользователю на экране. адаптер создает 10 ViewHolder экземпляров, чтобы показывать их одновременно. когда пользователь прокручивает и адаптер должен показать больше элементов, вместо того, чтобы создавать новые экземпляры ViewHolder, он повторно использует элементы, которые больше не видны. ваш адаптер предотвращает создание новых представлений и экономит время CPU, делая это.</item>

        <item>\t\tAdapter – мост между набором данных и объектом, использующим эти данные. Также адаптер отвечает за создание View-компонента для каждой единицы данных из набора.
	В приложениях очень часто используется список на основе ListView. Сам список состоит из множества элементов TextView, которые идут друг за другом. Но их количество будет зависеть от того, чтобы мы хотим отобразить. Если нам нужны дни недели, то достаточно семи элементов, если месяцы, то уже двенадцать, ну а если нам нужны имена городов, то счёт пойдет на сотни. Короче говоря, нам нужно составить данные, например, в виде массива и скормить его списку. Адаптер этим и занимается. Он берёт по порядку предоставленные данные и размещает их в списке по порядку. При этом адаптер на лету создаёт нужные компоненты TextView и помещает в него приготовленный текст. Данные могут быть находиться не только в массиве, но и в базе данных. Для такого случая используется другой адаптер. А также вы можете придумать свой адаптер.</item>
    </string-array>
</resources>